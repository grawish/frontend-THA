{"version":3,"sources":["index.js"],"names":["Item","props","toggledisplay","event","val","i","target","id","split","console","log","document","getElementById","classList","toggle","value","calArray","map","className","onClick","delfun","editfun","Body","tit","cal","useState","setCalArray","type","onChange","alert","filter","item","arr","ReactDOM","render","StrictMode"],"mappings":"2LAIA,SAASA,EAAKC,GACV,IAAIC,EAAgB,SAACC,EAAOC,GACxB,IAAIC,EAAIF,EAAMG,OAAOC,GAAGC,MAAM,KAAK,GACnCC,QAAQC,IAAIN,GACZO,SAASC,eAAe,YAAcP,GAAGQ,UAAUC,OAAO,UAC1DH,SAASC,eAAe,YAAYP,GAAGU,MAAQX,EAAI,GACnDO,SAASC,eAAe,UAAUP,GAAGU,MAAQX,EAAI,IAIrD,OACIH,EAAMe,SAASC,KAAI,SAACF,EAAOV,GAAR,OACX,sBAAKa,UAAU,YAAf,UACI,6BACKH,EAAM,KAEX,sBAAKG,UAAU,OAAf,UACI,4BACK,gBAAkBH,EAAM,GAAK,iBAElC,wBAAQI,QAASlB,EAAMmB,OAAQb,GAAIF,EAAnC,oBACA,wBAAQc,QAAU,SAAAhB,GAAK,OAAID,EAAcC,EAAMY,IAASR,GAAI,QAAUF,EAAtE,qBAEJ,sBAAKE,GAAI,YAAcF,EAAGa,UAAW,kBAArC,UACI,uBAAOX,GAAI,YAAcF,IACzB,uBAAOE,GAAI,UAAYF,IACvB,wBAAQc,QAAS,SAAChB,GACdF,EAAMoB,QAAQlB,GACdD,EAAcC,EAAOY,IACtBR,GAAI,QAAUF,EAHjB,uBAdwBA,MA2BhD,SAASiB,IACL,IACIC,EACAC,EAFJ,EAAgCC,mBAAS,CAAC,CAAC,IAAK,OAAhD,mBAAOT,EAAP,KAAiBU,EAAjB,KA+BA,OACI,sBAAKR,UAAU,YAAf,UACI,sBAAKA,UAAU,OAAf,UACI,uBAAOX,GAAG,YAAYoB,KAAK,OAAOC,SApBhC,SAAAzB,GACVoB,EAAOpB,EAAMG,OAAOS,MACpBN,QAAQC,IAAI,YAmBJ,uBAAOH,GAAG,UAAUoB,KAAK,SAASC,SAjBhC,SAAAzB,GACVqB,EAAOrB,EAAMG,OAAOS,SAiBZ,wBAAQI,QAfF,SAAChB,GACoC,KAA/CQ,SAASC,eAAe,aAAaG,OAA6D,KAA7CJ,SAASC,eAAe,WAAWG,OACxFW,EAAY,GAAD,mBAAKV,GAAL,CAAe,CAACO,EAAKC,MAChCb,SAASC,eAAe,aAAaG,MAAQ,GAC7CJ,SAASC,eAAe,WAAWG,MAAQ,IAE3Cc,MAAM,kBASF,uBAEJ,cAAC7B,EAAD,CAAMgB,SAAUA,EAAUI,OAnClB,SAACjB,GACbuB,EAAYV,EAASc,QAAO,SAACC,EAAM1B,GAC/B,MAAO,GAAKA,IAAMF,EAAMG,OAAOC,QAiCcc,QA9BrC,SAAClB,GACb,IAAI6B,EAAG,YAAOhB,GACVX,EAAIF,EAAMG,OAAOC,GAAGC,MAAM,KAAK,GACnCwB,EAAI3B,GAAK,CAACM,SAASC,eAAe,YAAcP,GAAGU,MAAOJ,SAASC,eAAe,UAAYP,GAAGU,OACjGW,EAAYM,SAiCpBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACb,EAAD,MAEJX,SAASC,eAAe,W","file":"static/js/main.a770157c.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Item(props) {\n    let toggledisplay = (event, val) => {\n        let i = event.target.id.split('-')[1]\n        console.log(val);\n        document.getElementById('editform-' + i).classList.toggle('hidden');\n        document.getElementById('titleinp-'+i).value = val[0];\n        document.getElementById('calinp-'+i).value = val[1];\n    }\n    let edit = event =>{\n    }\n    return (\n        props.calArray.map((value, i) => (\n                <div className='component' key={i}>\n                    <h1>\n                        {value[0]}\n                    </h1>\n                    <div className='flex'>\n                        <p>\n                            {'You consumed ' + value[1] + ' cals today.'}\n                        </p>\n                        <button onClick={props.delfun} id={i}>Delete</button>\n                        <button onClick={(event => toggledisplay(event,value))} id={\"edit-\" + i}>Edit</button>\n                    </div>\n                    <div id={'editform-' + i} className={'editform hidden'}>\n                        <input id={'titleinp-' + i} />\n                        <input id={'calinp-' + i} />\n                        <button onClick={(event) => {\n                            props.editfun(event);\n                            toggledisplay(event, value);\n                        }} id={\"done-\" + i}>Done\n                        </button>\n                    </div>\n\n                </div>\n            )\n        )\n    )\n}\n\nfunction Body() {\n    const [calArray, setCalArray] = useState([['1', '2']]);\n    let tit;\n    let cal;\n    let removeArr = (event) => {\n        setCalArray(calArray.filter((item, i) => {\n            return \"\" + i !== event.target.id;\n        }));\n    }\n    let updateArr = (event) => {\n        let arr = [...calArray];\n        let i = event.target.id.split(\"-\")[1];\n        arr[i] = [document.getElementById('titleinp-' + i).value, document.getElementById('calinp-' + i).value];\n        setCalArray(arr);\n    }\n    let settits = event => {\n        tit = (event.target.value);\n        console.log(\"inout\");\n    }\n    let setcals = event => {\n        cal = (event.target.value);\n    }\n    let insertInArr = (event) => {\n        if (document.getElementById('title_inp').value !== \"\" && document.getElementById('cal_inp').value !== \"\") {\n            setCalArray([...calArray, [tit, cal]]);\n            document.getElementById('title_inp').value = \"\";\n            document.getElementById('cal_inp').value = \"\";\n        } else {\n            alert(\"empty Strings\")\n        }\n\n    }\n    return (\n        <div className='container'>\n            <div className='form'>\n                <input id=\"title_inp\" type=\"text\" onChange={settits}/>\n                <input id=\"cal_inp\" type=\"number\" onChange={setcals}/>\n                <button onClick={insertInArr}>Submit</button>\n            </div>\n            <Item calArray={calArray} delfun={removeArr} editfun={updateArr}/>\n        </div>\n    )\n}\n\n// calArray.map((cal_ar, i) => <Item title={cal_ar[0]} desc={cal_ar[1]} index={i} key={i} delfun={removeArr}/>)\n\nReactDOM.render(\n    <React.StrictMode>\n        <Body/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}